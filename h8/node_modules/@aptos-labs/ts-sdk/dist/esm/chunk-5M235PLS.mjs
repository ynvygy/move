import{spawn as n}from"child_process";import{platform as p}from"os";var i=class{async init(s){let{network:e,profile:r}=s,t=["aptos","init",`--network=${e??"local"}`,`--profile=${r??"default"}`];return this.runCommand(t)}async compile(s){let{packageDirectoryPath:e,namedAddresses:r}=s,t=["aptos","move","compile","--package-dir",e],a=this.parseNamedAddresses(r);return t.push(...this.prepareNamedAddresses(a)),this.runCommand(t)}async test(s){let{packageDirectoryPath:e,namedAddresses:r}=s,t=["aptos","move","test","--package-dir",e],a=this.parseNamedAddresses(r);return t.push(...this.prepareNamedAddresses(a)),this.runCommand(t)}async publish(s){let{packageDirectoryPath:e,namedAddresses:r,profile:t}=s,a=["aptos","move","publish","--package-dir",e,`--profile=${t??"default"}`],d=this.parseNamedAddresses(r);return a.push(...this.prepareNamedAddresses(d)),this.runCommand(a)}async createObjectAndPublishPackage(s){let{packageDirectoryPath:e,addressName:r,namedAddresses:t,profile:a}=s,d=["aptos","move","create-object-and-publish-package","--package-dir",e,"--address-name",r,`--profile=${a??"default"}`],o=this.parseNamedAddresses(t);return d.push(...this.prepareNamedAddresses(o)),this.runCommand(d).then(c=>this.extractAddressFromOutput(c))}async upgradeObjectPackage(s){let{packageDirectoryPath:e,objectAddress:r,namedAddresses:t,profile:a}=s,d=["aptos","move","upgrade-object-package","--package-dir",e,"--object-address",r,`--profile=${a??"default"}`],o=this.parseNamedAddresses(t);return d.push(...this.prepareNamedAddresses(o)),this.runCommand(d)}async runScript(s){let{compiledScriptPath:e,profile:r}=s,t=["aptos","move","run-script","--compiled-script-path",e,`--profile=${r??"default"}`];return this.runCommand(t)}async runCommand(s){return new Promise((e,r)=>{let t=p(),a,d="";t==="win32"?a=n("npx",s,{shell:!0}):a=n("npx",s),a.stdout.on("data",o=>{d+=o.toString()}),a.stdout.pipe(process.stdout),a.stderr.pipe(process.stderr),process.stdin.pipe(a.stdin),a.on("close",o=>{o===0?e(d):r(new Error(`Child process exited with code ${o}`))})})}prepareNamedAddresses(s){let e=s.size,r=[];if(e===0)return r;r.push("--named-addresses");let t=[];return s.forEach((a,d)=>{let o=`${d}=${a.toString()}`;t.push(o)}),r.push(t.join(",")),r}parseNamedAddresses(s){let e=new Map;return Object.keys(s).forEach(r=>{let t=s[r];e.set(r,t)}),e}extractAddressFromOutput(s){let e=s.match("Code was successfully deployed to object address (0x[0-9a-fA-F]+)\\.");if(e)return e[1];throw new Error("Failed to extract object address from output")}};export{i as a};
//# sourceMappingURL=chunk-5M235PLS.mjs.map